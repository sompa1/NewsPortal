@using Microsoft.AspNetCore.Identity
@using NewsPortal.Model

@inject UserManager<User> UserManager

@model NewsPortal.Web.Models.AdminPageModel
<table class="table table-bordered table-responsive table-hover">
    <tr>
        <td>@Html.ActionLink("Populate database with example news", "PopulateNews")</td>
    </tr>
</table>
<table class="table table-bordered table-responsive table-hover">
    <tr>
        <th>Id </th>
        <th>Username</th>
        <th>Email</th>
        <th>Roles</th>
        <th></th>
    </tr>
    @foreach (var user in Model.Users) {
        var roles = await UserManager.GetRolesAsync(user);
        <tr>
            <td>@user.Id</td>
            <td>@user.UserName</td>
            <td>@user.Email</td>
            <td>
                @foreach (var role in roles) {
                    @role<br />
                }
            </td>
            <td>
                @if (roles.Contains("Authors")) {
                    @Html.ActionLink("Revoke Author role", "RevokeAuthorRole", new { id = user.Id })
                } else {
                    @Html.ActionLink("Grant Author role", "GrantAuthorRole", new { id = user.Id })
                }
                |
                @if (roles.Contains("Administrators")) {
                    @Html.ActionLink("Revoke Admin role", "RevokeAdminRole", new { id = user.Id })
                } else {
                    @Html.ActionLink("Grant Admin role", "GrantAdminRole", new { id = user.Id })
                }
                @if (user.Id != Model.CurrentUserId) {
                    @Html.Raw(" | ")
                    @Html.ActionLink("Delete user", "RemoveUser", new { id = user.Id })
                }
            </td>
        </tr>
    }
</table>
