@model NewsIndexModel
@{
    ViewData["Title"] = "Index";
    Dictionary<string, string> queryParams = Context.Request.Query.ToDictionary(q => q.Key, q => q.Value.ToString());
}

<div class="container">
    <div class="card border mb-3">
        <div class="card-header" id="headingOne">
            <h2 class="mb-0">
                <button class="btn btn-primary border" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                    Filters
                </button>
            </h2>
        </div>

        <div id="collapseOne" class="collapse" aria-labelledby="headingOne">
            <div class="card-body">
                <form id="news-form" method="get" asp-controller="News" asp-action="Index">
                    @Html.DropDownListFor(x => x.Specification.CategoryId, Model.Categories)
                    <div>
                        <label asp-for="@Model.Specification.Headline">Headline of the article</label>
                        <input asp-for="@Model.Specification.Headline" class="form-control" type="text">
                        <span asp-validation-for="@Model.Specification.Headline" class="text-danger"></span>
                    </div>
                    <div>
                        <label asp-for="@Model.Specification.Author">Author of the article</label>
                        <input asp-for="@Model.Specification.Author" class="form-control" type="text">
                        <span asp-validation-for="@Model.Specification.Author" class="text-danger"></span>
                    </div>
                    <div>
                        <label asp-for="@Model.Specification.MinNumberOfComments">Minimum number of comments</label>
                        <input asp-for="@Model.Specification.MinNumberOfComments" class="form-control" type="number">
                        <span asp-validation-for="@Model.Specification.MinNumberOfComments" class="text-danger"></span>
                    </div>
                    <div>
                        <label asp-for="@Model.Specification.MaxNumberOfComments">Maximum number of comments</label>
                        <input asp-for="@Model.Specification.MaxNumberOfComments" class="form-control" type="number">
                        <span asp-validation-for="@Model.Specification.MaxNumberOfComments" class="text-danger"></span>
                    </div>
                    <div>
                        <label asp-for="@Model.Specification.MinPublishYear">Published after (year)</label>
                        <input asp-for="@Model.Specification.MinPublishYear" class="form-control" type="number">
                        <span asp-validation-for="@Model.Specification.MinPublishYear" class="text-danger"></span>
                    </div>
                    <div>
                        <label asp-for="@Model.Specification.MaxPublishYear">Published before (year)</label>
                        <input asp-for="@Model.Specification.MaxPublishYear" class="form-control" type="number">
                        <span asp-validation-for="@Model.Specification.MaxPublishYear" class="text-danger"></span>
                    </div>
                    <div class="text-right mt-2">
                        <button type="submit" class="btn btn-default">
                            Search
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="card text-center border-0">
    <div class="card-body">
        <div class="mb-1">
            @Model.News.AllResultsCount news found
        </div>
        @{ var totalPages = (int)Math.Ceiling((double)Model.News.AllResultsCount / (double)Model.News.PageSize); }
        <nav>
            <ul class="pagination justify-content-center">
                @if (Model.News.PageNumber > 1)
                {
                    <li class="page-item">
                        @{ queryParams["Specification.PageNumber"] = (Model.News.PageNumber - 1).ToString(); }
                        <a asp-controller="News" asp-action="Index" asp-all-route-data="queryParams" class="page-link">
                            <span>&laquo;</span>
                        </a>
                    </li>
                }
                @for (var pageNumber = Math.Max(1, Model.News.PageNumber - 2); pageNumber <= Math.Min(totalPages, Model.News.PageNumber + 2); pageNumber++)
                {
                    @if (Model.News.PageNumber == pageNumber)
                    {
                        <li class="page-item active">
                            <a class="page-link">
                                @(pageNumber)
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            @{ queryParams["Specification.PageNumber"] = pageNumber.ToString(); }
                            <a asp-controller="News" asp-action="Index" asp-all-route-data="@queryParams" class="page-link">
                                @(pageNumber)
                            </a>
                        </li>
                    }
                }
                @if (Model.News.PageNumber < totalPages)
                {
                    <li class="page-item">
                        @{ queryParams["Specification.PageNumber"] = (Model.News.PageNumber + 1).ToString(); }
                        <a asp-controller="News" asp-action="Index" asp-all-route-data="queryParams" class="page-link">
                            <span>&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
<vc:news-list news="Model.News"></vc:news-list>